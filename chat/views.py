from django.shortcuts import render, get_object_or_404, redirect
from django.http import JsonResponse
from django.db.models import Q
from django.contrib.auth.decorators import login_required
from django.contrib.auth import get_user_model
from .models import Message, Notification
User = get_user_model()

@login_required
def messages_list(request):
    """
    Ø¹Ø±Ø¶ Ù‚Ø§Ø¦Ù…Ø© Ø§Ù„Ù…Ø­Ø§Ø¯Ø«Ø§Øª Ø§Ù„Ø³Ø§Ø¨Ù‚Ø© Ù„Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø§Ù„Ø­Ø§Ù„ÙŠ.
    ÙŠØªÙ… Ø¬Ù„Ø¨ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…ÙŠÙ† Ø§Ù„Ø°ÙŠÙ† Ù‚Ø§Ù… Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø¨Ù…Ø­Ø§Ø¯Ø«ØªÙ‡Ù… Ø£Ùˆ ØªÙ„Ù‚Ù‰ Ø±Ø³Ø§Ø¦Ù„ Ù…Ù†Ù‡Ù….
    """
    user = request.user
    conversations = User.objects.filter(
        Q(sent_messages__receiver=user) | Q(received_messages__sender=user)
    ).distinct().exclude(id=user.id)
    return render(request, 'chat/messages_list.html', {'conversations': conversations})

@login_required
def chat_view(request, user_id):
    """
    Ø¹Ø±Ø¶ Ø§Ù„Ù…Ø­Ø§Ø¯Ø«Ø© Ø¨ÙŠÙ† Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø§Ù„Ø­Ø§Ù„ÙŠ ÙˆØ§Ù„Ù…Ø³ØªÙ„Ù… Ø§Ù„Ù…Ø­Ø¯Ø¯.
    Ø¹Ù†Ø¯ Ø¥Ø±Ø³Ø§Ù„ Ø±Ø³Ø§Ù„Ø©ØŒ ÙŠØªÙ… Ø¥Ù†Ø´Ø§Ø¡ Ø¥Ø´Ø¹Ø§Ø± Ù„Ù„Ù…Ø³ØªÙ„Ù….
    """
    receiver = get_object_or_404(User, id=user_id)
    messages = Message.objects.filter(
        Q(sender=request.user, receiver=receiver) | Q(sender=receiver, receiver=request.user)
    ).order_by('timestamp')

    if request.method == "POST":
        content = request.POST.get('content')
        if content:
            Message.objects.create(sender=request.user, receiver=receiver, content=content)
            # Ø¥Ù†Ø´Ø§Ø¡ Ø¥Ø´Ø¹Ø§Ø± Ù„Ù„Ù…Ø³ØªÙ„Ù… Ø¹Ù†Ø¯ ÙˆØµÙˆÙ„ Ø±Ø³Ø§Ù„Ø© Ø¬Ø¯ÙŠØ¯Ø©
            Notification.objects.create(
                user=receiver,
                message=f"ðŸ“© Ø±Ø³Ø§Ù„Ø© Ø¬Ø¯ÙŠØ¯Ø© Ù…Ù† {request.user.get_full_name()}",
                link=f"/chat/messages/{request.user.id}/"  # Ø§Ø¶Ø¨Ø· Ø§Ù„Ø±Ø§Ø¨Ø· Ø­Ø³Ø¨ Ù†Ø¸Ø§Ù…Ùƒ
            )
            return redirect('chat_view', user_id=receiver.id)

    return render(request, 'chat.html', {'receiver': receiver, 'messages': messages})

@login_required
def get_notifications(request):
    """
    Ø¬Ù„Ø¨ Ø§Ù„Ø¥Ø´Ø¹Ø§Ø±Ø§Øª ØºÙŠØ± Ø§Ù„Ù…Ù‚Ø±ÙˆØ¡Ø© Ù„Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø§Ù„Ø­Ø§Ù„ÙŠ Ø¹Ù„Ù‰ Ù‡ÙŠØ¦Ø© JSON.
    """
    if request.user.is_authenticated:
        notifications = Notification.objects.filter(user=request.user, is_read=False).order_by('-timestamp')
        data = [
            {
                'id': n.id,
                'message': n.message,
                'timestamp': n.timestamp.strftime("%H:%M - %d/%m/%Y"),
                'link': n.link,
            }
            for n in notifications
        ]
        return JsonResponse({'notifications': data, 'count': notifications.count()})
    return JsonResponse({'notifications': [], 'count': 0})

@login_required
def mark_notifications_as_read(request):
    """
    ØªØ¹ÙŠÙŠÙ† Ø¬Ù…ÙŠØ¹ Ø§Ù„Ø¥Ø´Ø¹Ø§Ø±Ø§Øª ØºÙŠØ± Ø§Ù„Ù…Ù‚Ø±ÙˆØ¡Ø© Ù„Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø§Ù„Ø­Ø§Ù„ÙŠ ÙƒÙ…Ù‚Ø±ÙˆØ¡Ø©.
    """
    Notification.objects.filter(user=request.user, is_read=False).update(is_read=True)
    return JsonResponse({'status': 'success'})


